[
{"keyword": "Feature", "name": "Add a task to the to-do list", "tags": [], "location": "features/tutorial.feature:1", "status": "failed", "elements": [{"type": "scenario", "keyword": "Scenario", "name": "Adding a task", "tags": [], "location": "features/tutorial.feature:2", "steps": [{"keyword": "Given", "step_type": "given", "name": "the To-Do list is empty", "location": "features/tutorial.feature:3", "match": {"location": "features/steps/steps.py:4", "arguments": []}, "result": {"status": "passed", "duration": 0.0005338191986083984}}, {"keyword": "When", "step_type": "when", "name": "the user adds a task \"Buy groceries\"", "location": "features/tutorial.feature:4", "match": {"location": "features/steps/steps.py:12", "arguments": [{"value": "Buy groceries", "name": "task"}]}, "result": {"status": "passed", "duration": 0.0010061264038085938}}, {"keyword": "Then", "step_type": "then", "name": "the to-do list should contain \"Buy groceries\"", "location": "features/tutorial.feature:5", "match": {"location": "features/steps/steps.py:20", "arguments": [{"value": "Buy groceries", "name": "task"}]}, "result": {"status": "passed", "duration": 0.0}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "List all the task", "tags": [], "location": "features/tutorial.feature:7", "steps": [{"keyword": "Given", "step_type": "given", "name": "the To-Do list contains", "location": "features/tutorial.feature:8", "table": {"headings": ["task"], "rows": [["Buy Groceries"], ["Make the dishes"], ["Wash the clothes"]]}, "match": {"location": "features/steps/steps.py:28", "arguments": []}, "result": {"status": "passed", "duration": 0.0}}, {"keyword": "When", "step_type": "when", "name": "the user list all tasks by name", "location": "features/tutorial.feature:13", "match": {"location": "features/steps/steps.py:35", "arguments": []}, "result": {"status": "passed", "duration": 0.0010449886322021484}}, {"keyword": "Then", "step_type": "then", "name": "the output should contain", "location": "features/tutorial.feature:14", "table": {"headings": ["task"], "rows": [["Buy Groceries"], ["Make the dishes"], ["Wash the clothes"]]}, "match": {"location": "features/steps/steps.py:42", "arguments": []}, "result": {"status": "passed", "duration": 0.0}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Mark a task as completed", "tags": [], "location": "features/tutorial.feature:20", "steps": [{"keyword": "Given", "step_type": "given", "name": "the to-do list contains tasks", "location": "features/tutorial.feature:21", "table": {"headings": ["Task", "Status"], "rows": [["Buy groceries", "Pending"]]}, "match": {"location": "features/steps/steps.py:50", "arguments": []}, "result": {"status": "passed", "duration": 0.0009987354278564453}}, {"keyword": "When", "step_type": "when", "name": "the user marks task \"Buy groceries\" as completed", "location": "features/tutorial.feature:24", "match": {"location": "features/steps/steps.py:56", "arguments": [{"value": "Buy groceries", "name": "task_name"}]}, "result": {"status": "passed", "duration": 0.0}}, {"keyword": "Then", "step_type": "then", "name": "the to-do list should show task \"Buy groceries\" as completed", "location": "features/tutorial.feature:25", "match": {"location": "features/steps/steps.py:64", "arguments": [{"value": "Buy groceries", "name": "task_name"}]}, "result": {"status": "failed", "duration": 0.0020051002502441406, "error_message": ["Traceback (most recent call last):", "  File \"C:\\msys64\\mingw64\\lib\\python3.10\\site-packages\\behave\\model.py\", line 1329, in run", "    match.run(runner.context)", "  File \"C:\\msys64\\mingw64\\lib\\python3.10\\site-packages\\behave\\matchers.py\", line 98, in run", "    self.func(context, *args, **kwargs)", "  File \"features\\steps\\steps.py\", line 74, in step_impl", "    def step_impl(context):", "  File \"C:\\msys64\\mingw64\\lib\\python3.10\\site-packages\\behave\\step_registry.py\", line 92, in wrapper", "    self.add_step_definition(step_type, step_text, func)", "  File \"C:\\msys64\\mingw64\\lib\\python3.10\\site-packages\\behave\\step_registry.py\", line 58, in add_step_definition", "    raise AmbiguousStep(message % (new_step, existing_step))", "behave.step_registry.AmbiguousStep: @given('the to-do list contains tasks') has already been defined in", "  existing step @given('the to-do list contains tasks') at features/steps/steps.py:50"]}}], "status": "failed"}, {"type": "scenario", "keyword": "Scenario", "name": "Clear the entire to-do list", "tags": [], "location": "features/tutorial.feature:27", "steps": [{"keyword": "Given", "step_type": "given", "name": "the to-do list contains tasks", "location": "features/tutorial.feature:28", "table": {"headings": ["Task"], "rows": [["Buy groceries"], ["Pay bills"]]}, "match": {"location": "features/steps/steps.py:50", "arguments": []}, "result": {"status": "failed", "duration": 0.0009992122650146484, "error_message": ["Traceback (most recent call last):", "  File \"C:\\msys64\\mingw64\\lib\\python3.10\\site-packages\\behave\\model.py\", line 1595, in __getitem__", "    index = self.headings.index(name)", "ValueError: 'Status' is not in list", "", "During handling of the above exception, another exception occurred:", "", "Traceback (most recent call last):", "  File \"C:\\msys64\\mingw64\\lib\\python3.10\\site-packages\\behave\\model.py\", line 1329, in run", "    match.run(runner.context)", "  File \"C:\\msys64\\mingw64\\lib\\python3.10\\site-packages\\behave\\matchers.py\", line 98, in run", "    self.func(context, *args, **kwargs)", "  File \"features\\steps\\steps.py\", line 53, in step_impl", "    to_do_list = [{row['Task']: row['Status']} for row in context.table]", "  File \"features\\steps\\steps.py\", line 53, in <listcomp>", "    to_do_list = [{row['Task']: row['Status']} for row in context.table]", "  File \"C:\\msys64\\mingw64\\lib\\python3.10\\site-packages\\behave\\model.py\", line 1600, in __getitem__", "    raise KeyError('\"%s\" is not a row heading' % name)", "KeyError: '\"Status\" is not a row heading'"]}}, {"keyword": "When", "step_type": "when", "name": "the user clears the to-do list", "location": "features/tutorial.feature:32"}, {"keyword": "Then", "step_type": "then", "name": "the to-do list should be empty", "location": "features/tutorial.feature:33"}], "status": "failed"}, {"type": "scenario", "keyword": "Scenario", "name": "Edit a task's details", "tags": [], "location": "features/tutorial.feature:35", "steps": [{"keyword": "Given", "step_type": "given", "name": "the to-do list contains the task \"Buy groceries\" with description \"Milk, Bread\"", "location": "features/tutorial.feature:36", "match": {"location": "features/steps/steps.py:93", "arguments": [{"value": "Buy groceries", "name": "task_name"}, {"value": "Milk, Bread", "name": "description"}]}, "result": {"status": "passed", "duration": 0.0001385211944580078}}, {"keyword": "When", "step_type": "when", "name": "the user edits the task \"Buy groceries\" changing description to \"Milk, Bread, Eggs\"", "location": "features/tutorial.feature:37", "match": {"location": "features/steps/steps.py:100", "arguments": [{"value": "Buy groceries", "name": "task_name"}, {"value": "Milk, Bread, Eggs", "name": "new_description"}]}, "result": {"status": "passed", "duration": 0.0}}, {"keyword": "Then", "step_type": "then", "name": "the to-do list should show the task \"Buy groceries\" with description \"Milk, Bread, Eggs\"", "location": "features/tutorial.feature:38", "match": {"location": "features/steps/steps.py:109", "arguments": [{"value": "Buy groceries", "name": "task_name"}, {"value": "Milk, Bread, Eggs", "name": "expected_description"}]}, "result": {"status": "passed", "duration": 0.0}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Filter completed tasks", "tags": [], "location": "features/tutorial.feature:40", "steps": [{"keyword": "Given", "step_type": "given", "name": "the to-do list contains tasks with various statuses", "location": "features/tutorial.feature:41", "table": {"headings": ["Task", "Status"], "rows": [["Buy groceries", "Completed"], ["Pay bills", "Pending"]]}, "match": {"location": "features/steps/steps.py:119", "arguments": []}, "result": {"status": "passed", "duration": 0.0}}, {"keyword": "When", "step_type": "when", "name": "the user filters tasks by the status \"Completed\"", "location": "features/tutorial.feature:45", "match": {"location": "features/steps/steps.py:126", "arguments": [{"value": "Completed", "name": "status"}]}, "result": {"status": "passed", "duration": 0.00099945068359375}}, {"keyword": "Then", "step_type": "then", "name": "the output should only show tasks with status \"Completed\"", "location": "features/tutorial.feature:46", "match": {"location": "features/steps/steps.py:133", "arguments": [{"value": "Completed", "name": "status"}]}, "result": {"status": "passed", "duration": 0.0}}], "status": "passed"}]}
]
